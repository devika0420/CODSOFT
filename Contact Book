class Contact:
    def __init__(self, name, phone_number, email, address):
        self.name = name
        self.phone_number = phone_number
        self.email = email
        self.address = address
    
    def __str__(self):
        return f"Name: {self.name}\nPhone: {self.phone_number}\nEmail: {self.email}\nAddress: {self.address}"
    
    def __eq__(self, other):
        return self.name.lower() == other.name.lower() and self.phone_number == other.phone_number
    
    def matches(self, keyword):
        keyword = keyword.lower()
        return (keyword in self.name.lower()) or (keyword in self.phone_number)

class ContactList:
    def __init__(self):
        self.contacts = []
    
    def add_contact(self, contact):
        self.contacts.append(contact)
        print(f"Contact '{contact.name}' added successfully.")
    
    def view_contacts(self):
        if not self.contacts:
            print("No contacts found.")
        else:
            for contact in self.contacts:
                print(contact)
                print("-" * 20)
    
    def search_contacts(self, keyword):
        found_contacts = []
        for contact in self.contacts:
            if contact.matches(keyword):
                found_contacts.append(contact)
        if not found_contacts:
            print("No matching contacts found.")
        else:
            print(f"Found {len(found_contacts)} matching contacts:")
            for contact in found_contacts:
                print(contact)
                print("-" * 20)
    
    def update_contact(self, name, phone_number, new_email, new_address):
        for contact in self.contacts:
            if contact.name.lower() == name.lower() and contact.phone_number == phone_number:
                contact.email = new_email
                contact.address = new_address
                print(f"Contact '{contact.name}' updated successfully.")
                return
        print("Contact not found.")
    
    def delete_contact(self, name, phone_number):
        for contact in self.contacts:
            if contact.name.lower() == name.lower() and contact.phone_number == phone_number:
                self.contacts.remove(contact)
                print(f"Contact '{contact.name}' deleted successfully.")
                return
        print("Contact not found.")

def main():
    contact_list = ContactList()

    while True:
        print("\n===== Contact Management System =====")
        print("1. Add Contact")
        print("2. View Contacts")
        print("3. Search Contacts")
        print("4. Update Contact")
        print("5. Delete Contact")
        print("6. Quit")

        choice = input("\nEnter your choice (1-6): ")

        if choice == '1':
            name = input("Enter name: ")
            phone_number = input("Enter phone number: ")
            email = input("Enter email: ")
            address = input("Enter address: ")
            new_contact = Contact(name, phone_number, email, address)
            contact_list.add_contact(new_contact)
        
        elif choice == '2':
            contact_list.view_contacts()
        
        elif choice == '3':
            keyword = input("Enter name or phone number to search: ")
            contact_list.search_contacts(keyword)
        
        elif choice == '4':
            name = input("Enter name of contact to update: ")
            phone_number = input("Enter phone number of contact to update: ")
            new_email = input("Enter new email: ")
            new_address = input("Enter new address: ")
            contact_list.update_contact(name, phone_number, new_email, new_address)
        
        elif choice == '5':
            name = input("Enter name of contact to delete: ")
            phone_number = input("Enter phone number of contact to delete: ")
            contact_list.delete_contact(name, phone_number)
        
        elif choice == '6':
            print("Exiting program.")
            break
        
        else:
            print("Invalid choice. Please enter a number from 1 to 6.")

if __name__ == "__main__":
    main()
